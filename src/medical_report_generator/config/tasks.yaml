# tasks.yaml
# Configuration des tâches pour l’équipe de Génération de Rapports Radiologiques Médicaux.

determine_report_type:
  description: >
    À partir du contenu médical brut ou de la transcription vocale fourni (en français) :
    ---
    {raw_input}
    ---
    Servez-vous de l’outil `classify_report_type` pour identifier le type précis d’IRM mentionné.
    Analysez la région anatomique, le contexte clinique et le vocabulaire spécialisé pour aboutir à un résultat en français.
  expected_output: >
    Une chaîne en français correspondant à l’identifiant du rapport (par ex. "irm_hepatique", "irm_genou").
    Exemple :
    ```
    irm_genou
    ```
  agent: report_classifier

retrieve_medical_info:
  description: >
    À partir du même texte médical ou transcription (en français) :
    ---
    {raw_input}
    ---
    1) En vous appuyant sur le `report_type` obtenu précédemment, récupérez des rapports similaires via `retrieve_similar_reports`.
    2) Identifiez et extrayez TOUS les faits médicaux, observations, procédures, antécédents pertinents, 
       questions cliniques et paramètres techniques relatifs à l’examen.
    3) Ne structurez pas encore ces éléments en sections finales.
    La sortie doit être un format structuré en français indiquant clairement chaque élément (par ex. indication, constatation, technique).
  expected_output: >
    Une liste ou un objet JSON en français listant tous les faits extraits.
    Chaque item précise son type (indication, constatation, technique…) et son détail.
    Exemple :
    ```json
    [
      {"type": "indication", "detail": "toux et essoufflement"},
      {"type": "technique", "detail": "scanner thoracique avec contraste"},
      {"type": "constatation", "detail": "petit nodule dans le lobe supérieur droit"}
    ]
    ```
  agent: information_extractor

organize_into_sections:
  description: >
    En prenant la liste structurée de faits médicaux (en français) issue de la tâche précédente :
    Mappez chaque entrée aux sections standard d’un rapport radiologique :
    Indication, Technique, Incidences, Résultat, Conclusion.
    Créez un dictionnaire où chaque clé correspond à une section et la valeur à la liste des points pertinents.
    Si aucune donnée ne s’applique, la liste doit rester vide []. Incluez systématiquement toutes les sections.
  expected_output: >
    Un objet JSON en français mappant :
    {
      "Indication": [...],
      "Technique": [...],
      "Incidences": [...],
      "Résultat": [...],
      "Conclusion": [...]
    }
  agent: template_mapper

compose_section_text:
  description: >
    Pour chaque section du dictionnaire (Indication, Technique, Incidences, Résultat, Conclusion),
    générez un texte formel, concis et professionnel en français, basé uniquement sur les données listées.
    Ne préfixez pas les titres de section et évitez tout contenu additionnel. 
    Si la liste est vide, retournez une chaîne vide "".
  expected_output: >
    Un dictionnaire JSON où chaque clé est le nom de la section et la valeur le texte final.
    Exemple :
    {
      "Indication": "Patient présentant toux et essoufflement.",
      "Technique": "Scanner thoracique avec contraste intraveineux.",
      "Incidences": "",
      "Résultat": "Petit nodule de 5 mm dans le lobe supérieur droit.",
      "Conclusion": "Clinique bénigne probable, suivi recommandé."
    }
  agent: report_section_generator

check_semantic_coherence:
  description: >
    Examinez le contenu textuel par section (en français) issu de `compose_section_text` :
    ---
    {{compose_section_text.output}}
    ---
    Vérifiez :
    1. Cohérence entre Indication, Résultat et Conclusion.
    2. Absence de contradiction interne.
    3. Logique de la conclusion par rapport aux résultats.
    4. Plausibilité clinique générale.
    Signalez ou corrigez tout problème, ou confirmez la validité sans changement.
  expected_output: >
    Un dictionnaire JSON annoté ou corrigé où les clés restent les sections du rapport,
    incluant des suggestions ou validations en français.
  agent: semantic_validator
  context:
    - compose_section_text

compile_finalize_report:
  description: >
    Avec :
    1) Le contenu final (potentiellement annoté) de chaque section (`{{check_semantic_coherence.output}}`).
    2) Le type de rapport IRM (`{{determine_report_type.output}}`).

    Formulez un titre adapté (ex. "Compte Rendu IRM du Genou"), puis assemblez le rapport selon le modèle exact :
    TITRE: [Titre]
    Indication: [texte ou Néant]
    Technique: [texte ou Néant]
    Incidences: [texte ou Néant]
    Résultat: [texte ou Néant]
    Conclusion: [texte ou Néant]

    Intégrez les annotations du validateur et remplacez les sections vides par "Néant".
    Retournez une seule chaîne de texte brut en français, prête pour export .doc.
  expected_output: >
    Une chaîne unique contenant le rapport complet formaté en français.
    Exemple :
    ```
    TITRE: Compte Rendu IRM du Genou

    Indication: Patient présentant douleurs au genou.

    Technique: Séquences T1, T2.

    Incidences: Néant

    Résultat: Lésion méniscale.

    Conclusion: Lésion méniscale interne.
    ```
  agent: report_finalizer_and_reviewer
  context:
    - check_semantic_coherence
    - determine_report_type
